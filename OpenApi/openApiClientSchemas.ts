/**
 * Generated by @openapi-codegen
 *
 * @version 0.0.0
 */
/**
 * This class implements the category serializer which
 * automatically serializes instances of the customer it
 * uses HyperLinkedModelSerializer class that automatically identifies
 * the fields and sets up the validation
 */
export type Category = {
  id: number;
  /**
   * @maxLength 40
   */
  name: string;
  /**
   * @maxLength 40
   */
  description: string;
};

/**
 * This class implements the category serializer which
 * automatically serializes instances of the customer it
 * uses HyperLinkedModelSerializer class that automatically identifies
 * the fields and sets up the validation
 */
export type PatchedCategory = {
  id?: number;
  /**
   * @maxLength 40
   */
  name?: string;
  /**
   * @maxLength 40
   */
  description?: string;
};

/**
 * This class implements the price serializer which
 * automatically serializes instances of the customer it
 * uses HyperLinkedModelSerializer class that automatically identifies
 * the fields and sets up the validation
 */
export type PatchedPrice = {
  /**
   * @format uri
   */
  url?: string;
  stock?: number;
  price?: number;
};

/**
 * This class implements the product serializer which
 * automatically serializes instances of the customer it
 * uses HyperLinkedModelSerializer class that automatically identifies
 * the fields and sets up the validation
 */
export type PatchedProduct = {
  /**
   * @maxLength 50
   */
  name?: string;
  /**
   * @format uri
   */
  productImage?: string;
  serialNumber?: number;
  /**
   * @maxLength 256
   */
  description?: string;
  supplier?: number;
  category?: number;
  price?: number;
};

/**
 * _summary_
 *
 * Args:
 *     serializers (_type_): _description_
 */
export type PatchedProfile = {
  id?: number;
  /**
   * @format uri
   */
  userImage?: string;
  /**
   * @maxLength 15
   */
  phoneNumber?: string;
  /**
   * @maxLength 30
   */
  address?: string;
  role?: RoleEnum;
  user?: number;
};

/**
 * This class implements the supplier serializer which
 * automatically serializes instances of the Supplier it
 * uses HyperLinkedModelSerializer class that automatically identifies
 * the fields a nd sets up the validation
 */
export type PatchedSupplier = {
  id?: number;
  /**
   * @maxLength 40
   */
  name?: string;
  /**
   * @maxLength 40
   */
  email?: string;
  /**
   * @maxLength 12
   */
  address?: string;
  /**
   * @maxLength 15
   */
  phoneNumber?: string;
};

/**
 * This class implements the price serializer which
 * automatically serializes instances of the customer it
 * uses HyperLinkedModelSerializer class that automatically identifies
 * the fields and sets up the validation
 */
export type Price = {
  /**
   * @format uri
   */
  url: string;
  stock: number;
  price: number;
};

/**
 * This class implements the product serializer which
 * automatically serializes instances of the customer it
 * uses HyperLinkedModelSerializer class that automatically identifies
 * the fields and sets up the validation
 */
export type Product = {
  /**
   * @maxLength 50
   */
  name: string;
  /**
   * @format uri
   */
  productImage: string;
  serialNumber?: number;
  /**
   * @maxLength 256
   */
  description: string;
  supplier: number;
  category: number;
  price: number;
};

/**
 * _summary_
 *
 * Args:
 *     serializers (_type_): _description_
 */
export type Profile = {
  id: number;
  /**
   * @format uri
   */
  userImage: string;
  /**
   * @maxLength 15
   */
  phoneNumber: string;
  /**
   * @maxLength 30
   */
  address: string;
  role?: RoleEnum;
  user: number;
};

/**
 * * `SUP` - Supplier/Partner
 * * `CLNT` - Consumer/Customer
 */
export type RoleEnum = "SUP" | "CLNT";

/**
 * This class implements the supplier serializer which
 * automatically serializes instances of the Supplier it
 * uses HyperLinkedModelSerializer class that automatically identifies
 * the fields a nd sets up the validation
 */
export type Supplier = {
  id: number;
  /**
   * @maxLength 40
   */
  name: string;
  /**
   * @maxLength 40
   */
  email: string;
  /**
   * @maxLength 12
   */
  address: string;
  /**
   * @maxLength 15
   */
  phoneNumber: string;
};
